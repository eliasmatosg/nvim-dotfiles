set termguicolors
set t_Co=256
set nowrap
set number
set tabstop=4 softtabstop=4
set shiftwidth=4
set expandtab
set smartindent
set guicursor=
set relativenumber
set nohlsearch
set hidden
set smartcase
set noswapfile
set nobackup
set undodir=~/.vim/undodir
set undofile
set incsearch
set wildmenu
set scrolloff=8
set signcolumn=yes
syntax on
call plug#begin('~/.vim/plugged')
Plug 'gruvbox-community/gruvbox'
Plug 'sainnhe/gruvbox-material'
Plug 'nvim-telescope/telescope.nvim'
Plug 'tpope/vim-fugitive'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'mbbill/undotree'
Plug 'preservim/nerdtree'
Plug 'neovim/nvim-lspconfig'
Plug 'nvim-lua/completion-nvim'
Plug 'norcalli/snippets.nvim'
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'dracula/vim', { 'as': 'dracula' }
Plug 'Yggdroot/indentLine'
Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}
call plug#end()
let mapleader = " "
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
"let g:completion_enable_snippet = 'vim-vsnip'
let g:completion_enable_snippet = 'snippets.nvim'
let g:NERDTreeGitStatusShowIgnored = 1
let g:NERDTreeGitStatusShowClean = 1
let g:NERDTreeGitStatusConcealBrackets = 1
nnoremap <leader>pv :NERDTree <CR>
nnoremap <leader>h :wincmd h <CR>
nnoremap <leader>j :wincmd j <CR>
nnoremap <leader>k :wincmd k<CR>
nnoremap <leader>l :wincmd l <CR>
nnoremap <leader>bn :bn <CR>
nnoremap <leader>bp :bp <CR>
nnoremap <leader>bd :bd <CR>
nnoremap <leader>qf <cmd>lua vim.lsp.buf.formatting()<CR>  
nnoremap <leader>vd :lua vim.lsp.buf.definition()<CR>
nnoremap <leader>vi :lua vim.lsp.buf.implementation()<CR>
nnoremap <leader>vsh :lua vim.lsp.buf.signature_help()<CR>
nnoremap <leader>vrr :lua vim.lsp.buf.references()<CR>
nnoremap <leader>vrn :lua vim.lsp.buf.rename()<CR>
nnoremap <leader>vh :lua vim.lsp.buf.hover()<CR>
nnoremap <leader>vca :lua vim.lsp.buf.code_action()<CR>
nnoremap <leader>vsd :lua vim.lsp.util.show_line_diagnostics(); vim.lsp.util.show_line_diagnostics()<CR>
nmap <leader>gs :G<CR>
nmap <leader>gj :G<CR>
nmap <leader>gf :G<CR>
"let g:gruvbox_material_palette = 'material'
let g:airline_theme = 'gruvbox'
let g:gruvbox_material_background = 'hard'
"let g:gruvbox_material_transparent_background = 1
let g:gruvbox_contrast_dark = 'hard'
"let g:gruvbox_material_enable_italic = 1
"let g:gruvbox_material_enable_bold = 1
"let g:gruvbox_transparent_bg=1
let g:gruvbox_bold = 1
let g:gruv_italic = 1
colorscheme gruvbox
set completeopt=menuone,noinsert,noselect
let g:completion_matching_strategy_list = ['exact', 'substring', 'fuzzy']
lua require'nvim-treesitter.configs'.setup{highlight = { enable = true } }
lua require'lspconfig'.clangd.setup{on_attach=require'completion'.on_attach}
lua require'lspconfig'.pyright.setup{on_attach=require'completion'.on_attach}
lua require'lspconfig'.html.setup{on_attach=require'completion'.on_attach}
lua require'lspconfig'.tsserver.setup{on_attach=require'completion'.on_attach, root_dir = vim.loop.cwd}
lua require'lspconfig'.cssls.setup{on_attach=require'completion'.on_attach, root_dir = vim.loop.cwd}
lua require'lspconfig'.kotlin_language_server.setup{on_attach=require'completion'.on_attach}
lua require'lspconfig'.hls.setup{on_attach=require'completion'.on_attach, root_dir = vim.loop.cwd}
lua require'lspconfig'.sqlls.setup{on_attach=require'completion'.on_attach}
lua require'lspconfig'.jdtls.setup{on_attach=require'completion'.on_attach}


